{
	"name": "dataflowagg",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "movies_csv",
						"type": "DatasetReference"
					},
					"name": "moviesv1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "outputcsv",
						"type": "DatasetReference"
					},
					"name": "moviesv1output"
				},
				{
					"dataset": {
						"referenceName": "outputcsv",
						"type": "DatasetReference"
					},
					"name": "aggregateoutput"
				}
			],
			"transformations": [
				{
					"name": "moviesv1derivedColumn1"
				},
				{
					"name": "aggmovies"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movieId as string,",
				"          title as string,",
				"          genres as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> moviesv1",
				"moviesv1 derive(title = toString(left(title,length(title)-6)),",
				"          year = toInteger(trim(right(title,6),'()'))) ~> moviesv1derivedColumn1",
				"moviesv1derivedColumn1 aggregate(groupBy(year),",
				"     moviescnt = count(year)) ~> aggmovies",
				"moviesv1derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['moviesderive.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> moviesv1output",
				"aggmovies sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['aggregateoutput.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> aggregateoutput"
			]
		}
	}
}